basePath: /api/v1
definitions:
  model.BaseResponse:
    properties:
      apiVersion:
        type: string
      context:
        type: string
      data: {}
      error:
        $ref: '#/definitions/model.ErrorData'
      id:
        type: string
      method:
        type: string
      params: {}
    type: object
  model.ErrorData:
    properties:
      code:
        type: integer
      errors:
        items:
          $ref: '#/definitions/model.ErrorInfo'
        type: array
      message:
        type: string
    type: object
  model.ErrorInfo:
    properties:
      domain:
        type: string
      extendedHelp:
        type: string
      location:
        type: string
      locationType:
        type: string
      message:
        type: string
      reason:
        type: string
      sendReport:
        type: string
    type: object
  model.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  model.NotificationRequest:
    properties:
      message:
        type: string
      targetRoles:
        items:
          type: string
        type: array
      targetUserIDs:
        items:
          type: integer
        type: array
      title:
        type: string
      url:
        type: string
    type: object
  model.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      role:
        type: string
    required:
    - email
    - name
    - role
    type: object
  model.SubscriptionRequest:
    properties:
      auth:
        type: string
      endpoint:
        type: string
      p256dh:
        type: string
    type: object
  model.UnsubscribeRequest:
    properties:
      endpoint:
        type: string
    type: object
  model.UpdatePasswordRequest:
    properties:
      new_password:
        minLength: 6
        type: string
      old_password:
        type: string
    required:
    - new_password
    - old_password
    type: object
host: localhost:8080
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a token
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully authenticated
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.BaseResponse'
      summary: Login a user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided information
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Register request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully registered user
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/model.BaseResponse'
      security:
      - BearerAuth: []
      summary: Register a new user
      tags:
      - auth
  /profile:
    get:
      consumes:
      - application/json
      description: Get the profile of the authenticated user
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User profile
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.BaseResponse'
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - profile
  /profile/password:
    put:
      consumes:
      - application/json
      description: Update the password of the authenticated user
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update password request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success message
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.BaseResponse'
      security:
      - BearerAuth: []
      summary: Update user password
      tags:
      - profile
  /push/send:
    post:
      consumes:
      - application/json
      description: Send notifications to specified roles and/or users
      parameters:
      - description: Notification request with title, message, optional URL, target
          roles, and target user IDs
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.NotificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success response with count of sent notifications
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "403":
          description: Forbidden - only management can send notifications
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/model.BaseResponse'
      summary: Send push notifications
      tags:
      - push
  /push/subscribe:
    post:
      consumes:
      - application/json
      description: Register a new push notification subscription
      parameters:
      - description: Subscription info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.SubscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "403":
          description: Forbidden - role not authorized
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/model.BaseResponse'
      summary: Subscribe to push notifications
      tags:
      - push
  /push/unsubscribe:
    post:
      consumes:
      - application/json
      description: Remove a push notification subscription
      parameters:
      - description: Unsubscribe request with endpoint
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UnsubscribeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/model.BaseResponse'
      summary: Unsubscribe from push notifications
      tags:
      - push
  /push/vapid-key:
    get:
      consumes:
      - application/json
      description: Get VAPID public key for push notification subscription
      produces:
      - application/json
      responses:
        "200":
          description: Success with public key
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/model.BaseResponse'
      summary: Get VAPID public key
      tags:
      - push
schemes:
- http
swagger: "2.0"
